<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Document</title>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.min.css" />
        <style>
            p {
                margin: 0;
            }

            img {
                width: 100%;
                vertical-align: middle;
            }

            html,
            body {
                width: 800px;
            }

            nav {
                font-size: 14px;
                line-height: 1.8;
                height: 72px;
                color: #fff;
                background-color: #000;
                display: flex;
                flex-direction: row;
                justify-content: space-around;
                align-items: center;
            }

            nav > div > p:first-of-type {
                font-weight: bold;
            }

            nav .match_id p:first-of-type {
                font-size: 16px;
            }

            nav > div.match_id > p.success::after {
                content: "※录像分析成功";
                color: #7ba334;
            }
            nav > div.match_id > p.fail::after {
                content: "※分析结果不完整";
                color: #ffb400;
            }

            .radiant {
                color: #3c9028;
            }

            .dire {
                color: #9c3628;
            }

            .match_result {
                font-weight: bold;
                height: 49px;
                display: flex;
                justify-content: center;
                align-items: center;
            }

            .match_result .win {
                margin: 0 25px;
            }

            .match_result .win.radiant::after {
                content: "天辉获胜";
            }

            .match_result .win.dire::after {
                content: "夜魇获胜";
            }

            .players {
                display: flex;
                flex-direction: column;
            }

            .panel,
            .player {
                padding: 0 10px;
            }

            .panel {
                padding-top: 4px;
                height: 40px;
                border-top: 3px solid #fff;
                font-size: 13.3px;
                display: grid;
                grid-template-columns: 32px 56px 378px repeat(4,1fr);
            }
            .panel.radiant {
                border-color: #3c9028;
            }
            .panel.dire {
                border-color: #9c3628;
            }
            .panel p{
                line-height: 16px;
                margin-left: 8px;
            }
            .panel .win{
                font-size: 20px;
                line-height: 32px;
            }
            .panel .data{
                color: #aaa;
            }

            .player:not(:last-child) {
                border-bottom: 1px solid #e1e1e1; /* 示例边框样式 */
            }

            .player {
                color: #000;
                width: 100%;
                display: grid;
                grid-template-columns: 64px 48px 88px 160px 112px 252px 36px 20px;
                grid-template-rows: 19px 14px 14px 14px;
                padding-bottom: 3px;
                font-size: 12px;
                line-height: 14px;
                overflow: hidden;
            }

            .player > .row-1 {
                margin-top: 6px;
            }

            .player > .hero_avatar {
                margin-bottom: 5px;
                width: 64px;
                grid-row: 1 / span 3;
                grid-column: 1;
                position: relative;
            }
            .player > .hero_avatar > p {
                width: 20px;
                height: 15px;
                background-color: #323232;
                position: absolute;
                bottom: 0;
                right: 0;
                font-size: 12px;
                line-height: 15px;
                color: #fff;
                text-align: center;
            }

            .player > .rank {
                position: relative;
                grid-row: 1 / span 3;
                grid-column: 2;
                width: 48px;
                height: 48px;
            }
            .player > .rank > img {
                position: absolute;
            }
            .player > .rank > p {
                position: absolute;
                width: 100%;
                bottom: 3px;
                text-align: center;
                font-size: 9px;
                color: #fff;
                text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000; /* 文字描边 */
            }

            .player > .titles {
                grid-row: 4;
                grid-column: 1 / span 3;
            }

            .player > .player_name {
                grid-row: 1;
                grid-column: 3 / span 2;
            }
            .player > .player_name > .rank {
                color: #aaa;
            }
            .player.radiant > .player_name > .name {
                color: #3c9028;
            }
            .player.dire > .player_name > .name {
                color: #9c3628;
            }

            .player .pick {
                grid-column: 3;
            }

            .player .networth {
                grid-column: 3;
            }
            .player .networth .gold {
                color: rgb(203, 176, 42);
                text-shadow: 1px 1px 0 #888; /* 设置阴影颜色及偏移 */
            }

            .player .hero_damage {
                grid-row: 2;
                grid-column: 4;
            }
            .player .damage_received {
                grid-row: 3;
                grid-column: 4;
            }
            .player .tower_damage {
                grid-row: 4;
                grid-column: 4;
            }
            .player .kda {
                grid-row: 1;
                grid-column: 5;
            }
            .player .kill_contribution {
                grid-row: 2;
                grid-column: 5;
            }
            .player .stun_duration {
                grid-row: 3;
                grid-column: 5;
            }
            .player .heal {
                grid-row: 4;
                grid-column: 5;
            }

            .player .items {
                grid-row: 1 / span 4;
                grid-column: 6;
                display: grid;
                grid-template-columns: 24px 192px auto;
                grid-template-rows: 32px 24px;
            }
            .player .items > div {
                display: flex;
                background-color: #c0c0c0;
            }
            .player .items .normal {
                height: 32px;
                grid-column: 1/-1;
                grid-row: 1;
            }
            .player .items .backpack {
                height: 24px;
                width: 96px;
                grid-row: 2;
                /* grid-column: 1; */
            }
            .player .items .normal .item {
                width: 40px;
                height: 30px;
                margin: 1px;
                position: relative;
            }
            .player .items .time {
                position: absolute;
                width: 100%;
                text-align: center;
                bottom: 0;
                height: 11px;
                line-height: 11px;
                color: #ccc;
                background-color: #323232;
            }
            .player .items .backpack{
                filter: grayscale(100%);
            }
            .player .items .backpack .item,
            .player .items .bear .item {
                width: 30px;
                height: 22px;
                margin: 1px;
                position: relative;
            }
            .player .neutral_item {
                grid-row: 1 / span 3;
                grid-column: 7;
                overflow: hidden;
                height: 32px;
                width: 32px;
                border-radius: 50%;
                background-size: auto 100%;
                background-position: center;
                margin-left: 2px;
            }
            .player .items .item.recipe {
                background-image: url("https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react/items/recipe.png");
                background-size: 100%;
            }

            .player .ahgs {
                grid-row: 1 / span 3;
                grid-column: 8;
            }
            .player .items .bear{
                height: 24px;
                width: 192px;
                grid-row: 2;
                grid-column: 2;
            }
            .player.bear .items .bear .time{
                font-size: 10px;
            }
            .player.bear .items .bear_icon{
                grid-row: 2;
                grid-column: 1;
            }
            .player.bear .items .neutral_item{
                height: 24px;
                width: 24px;
                grid-row: 2;
                grid-column: 3;
            }
            /* .player .items .backpack .item img{
                height: 22px;
                width: auto;
            } */
        </style>
    </head>
    <body>
        <nav>
            <div class="match_id">
                <p>比赛 <%-match.id%></p>
                <p class="<%-match.parsedDateTime?'success':'fail'%>"><!--伪类赋值：类名输入success时此处为※录像分析成功，fail为※分析结果不完整，同时自动应用字体颜色样式。--></p>
            </div>
            <div class="start_time">
                <p>开始时间</p>
                <p><%-moment(new Date(match.startDateTime * 1000)).format("YYYY-MM-DD HH:mm:ss").slice(2)%></p>
            </div>
            <div class="duration">
                <p>持续时间</p>
                <p><%-sec2time(match.durationSeconds)%></p>
            </div>
            <div class="region">
                <p>地区</p>
                <p><%-d2a.region[match.regionId]%></p>
            </div>
            <div class="mode">
                <p>模式</p>
                <p><%-d2a.lobbyTypes[match.lobbyType] || match.lobbyType%>/<%-d2a.gameMode[match.gameMode] || match.gameMode%></p>
            </div>
            <div class="rank">
                <img width="48" height="48" src="<%-utils.getImageUrl('medal_' + match.rank?.toString().split('')[0])%>" alt="" />
            </div>
        </nav>
        <section class="match_result">
            <span class="kills radiant"><%-match.radiant.killsCount%></span>
            <span class="win <%-match.didRadiantWin?'radiant':'dire'%>"><!--伪类赋值：类名输入radiant此处为天辉获胜，dire为夜魇获胜，同时自动应用字体颜色样式。--></span>
            <span class="kills dire"><%-match.dire.killsCount%></span>
        </section>
        <section class="players">
            <%- ['radiant','dire'].map(team=>`
            <section class="panel ${team}" style="order: ${team==="radiant"?0:50}">
                <img src="${utils.getImageUrl("logo_"+team)}" alt="">
                <p>${(team==="radiant"?["Radiant","天辉"]:["Dire","夜魇"]).join("<br>")}</p>
                ${((team==="radiant")===match.didRadiantWin)?`<p class="win">胜利</p>`:"<p></p>"}
                <p class="data">击杀<br>${match[team].killsCount}</p>
                <p class="data">总伤害<br>${match[team].heroDamage}</p>
                <p class="data">总经济<br>${match[team].networth}</p>
                <p class="data">总经验<br>${match[team].experience}</p><!--此处无有效API，仅能通过每分钟经验推算-->
            </section>`).join("")
            %>
            <%- match.players.map(player=> `
            <div class="player ${player.team}${player.hero.id==80?" bear":""}" style="order: ${player.team==="radiant"?1:100};">
                <div class="hero_avatar row-1">
                    <img src="${utils.getImageUrl(player.hero.shortName, ImageType.Heroes)}" />
                    <p class="level">${player.level}</p>
                </div>
                <div class="rank">
                    <img
                        src="${utils.getImageUrl('medal_' +(player.inTop100??player.rank.medal))}"
                        class="medal"
                    />
                    <img src="${utils.getImageUrl('star_' + player.rank.star)}" class="stars" />
                    <p>${player.steamAccount.seasonLeaderboardRank??""}</p>
                </div>
                <div class="titles">${player.titles.map((item) => `<span style="color: ${item.color};">${item.name}</span>`).join('&nbsp;')}</div>
                <div class="player_name row-1">
                    <span class="rank">${`[${d2a.rank[player.rank.medal]}${player.rank.star||""}]`}</span>
                    <span class="name">${player.steamAccount.name}</span>
                </div>
                <p class="pick">${player.isRandom?'随机':`第${player.order == null ? "-" : player.order + 1}手`} ${d2a.position[player.position?.slice(-1)]??''}</p>
                <p class="networth">
                    <span class="gold">${formatNumber(player.networth)}</span>
                    (${(player.heroDamage / player.networth)?.toFixed(2)})
                </p>
                <p class="hero_damage">造成伤害：${player.heroDamage} (${(player.heroDamage/match[player.team].heroDamage*100).toFixed(2)}%)</p>
                <p class="damage_received">承受伤害：${player.damageReceived} (${(player.damageReceived/match[player.team].damageReceived*100).toFixed(2)}%)</p>
                <p class="tower_damage">建筑伤害：${player.towerDamage}</p>
                <p class="kda row-1">${player.kills}/${player.deaths}/${player.assists} (${((player.kills + player.assists) / (player.deaths || 1)).toFixed(2)})</p>
                <p class="kill_contribution">参战率：${(player.killContribution * 100).toFixed(2)}%</p>
                <p class="stun_duration">控制时间：${(player.stats.heroDamageReport.dealtTotal.stunDuration / 100).toFixed(2)}s</p>
                <p class="heal">治疗量：${player.heroHealing}</p>
                <div class="items row-1">
                    <div class="normal">
                        ${player.items.map((item) =>`
                        <div class="item${item?.isRecipe ? " recipe" : ""}" data-id="${item?.id??0}">
                            <img src="${item ? utils.getImageUrl(item.name, ImageType.Items) : ""}" alt="" />
                            ${item ? `<p class="time">${sec2time(item?.time) ?? ""}</p>` : ""}
                        </div>`).join("")}
                    </div>
                    ${player.hero.id != 80?`
                    <div class="backpack">
                        ${player.backpacks.map((item) =>`
                        <div class="item${item?.isRecipe ? " recipe" : ""}">
                            <img src="${item ? utils.getImageUrl(item.name, ImageType.Items) : ""}" alt="" />
                        </div>`).join("")}
                    </div>`:`
                    <img class="bear_icon" src="https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react/abilities/lone_druid_spirit_bear.png" alt="">
                    <div class="bear">
                        ${player.unitItems.map((item) =>`
                        <div class="item${item?.isRecipe ? " recipe" : ""}" data-id="${item?.id??0}">
                            <img src="${item ? utils.getImageUrl(item.name, ImageType.Items) : ""}" alt="" />
                            ${item ? `<p class="time">${sec2time(item?.time) ?? ""}</p>` : ""}
                        </div>`).join("")}
                    </div>
                    <div class="neutral_item" style="background-image: url(${utils.getImageUrl(dotaconstants.item_ids[player.additionalUnit.neutral0Id], ImageType.Items)})"></div>`
                }
                </div>
                <div class="neutral_item row-1" style="background-image: url(${utils.getImageUrl(dotaconstants.item_ids[player.neutral0Id], ImageType.Items)})"></div>
                <div class="ahgs row-1">
                    <img src="${utils.getImageUrl("scepter_"+((player.items.concat(player.backpacks).find(item=>item?.id==108)||player.stats.matchPlayerBuffEvent.find(buff=>buff.itemId==108))?1:0))}" alt="" />
                    <img src="${utils.getImageUrl("shard_"+(player.stats.matchPlayerBuffEvent.find(buff=>buff.itemId==609)?1:0))}" alt="" />
                </div>
            </div>
            `).join("") %>
        </section>
    </body>
</html>
